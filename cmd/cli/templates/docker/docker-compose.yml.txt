version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-4000}:${PORT:-4000}"
    environment:
      - PORT=${PORT:-4000}
      - DEBUG=${DEBUG:-false}
      - DATABASE_TYPE=${DATABASE_TYPE:-postgres}
      - DATABASE_DSN=${DATABASE_DSN}
      - CACHE=${CACHE:-redis}
      - SESSION_TYPE=${SESSION_TYPE:-redis}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PREFIX=${REDIS_PREFIX:-$APPNAME}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_NAME=${FROM_NAME:-$APPNAME}
      - FROM_ADDRESS=${FROM_ADDRESS}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - JOB_WORKERS=${JOB_WORKERS:-5}
      - JOB_ENABLE_PERSISTENCE=${JOB_ENABLE_PERSISTENCE:-true}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/root/logs
      - ./tmp:/root/tmp
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-4000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-$APPNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME:-$APPNAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-$APPNAME} -d ${DB_NAME:-$APPNAME}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local